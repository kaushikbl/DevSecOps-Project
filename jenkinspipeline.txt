pipeline {
    agent any
    tools {
        jdk 'jdk17'
           nodejs 'node16'
        }

    environment {
        SCANNER_HOME = tool 'SonarQube Scanner'
    }
    
    stages {
        stage('Checkout from Git') {
            steps {
                git branch: 'main', credentialsId: 'github-jenkins', url: 'https://github.com/kaushikbl/DevSecOps-Project.git'
            }
        }
        stage("Sonarqube Analysis") {
            steps {
                withSonarQubeEnv('sonarqube-scanner') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=netflix-app \
                    -Dsonar.projectKey=netflix-app'''
                }
            }
        }
      
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
    
       
        stage('Trivy filesystem Scan') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        
        stage("Docker Build & Push"){
            steps{
                script{
                   withDockerRegistry(credentialsId: 'jenkins-docker') { 
                       
                       buildNumber = "${BUILD_NUMBER}"
                       

                       sh "docker build --build-arg TMDB_V3_API_KEY=489362a14e0518180c51d1392ba8a3da -t kaushikbl/netflix-app:${buildNumber} ."
                    
                       sh "docker push kaushikbl/netflix-app:${buildNumber}"
                    }
                }
            }
        }
        stage("Trivy Image scan"){
            steps{
                sh "trivy image kaushikbl/netflix-app:${buildNumber} > trivyimage.txt" 
        
            }
        }
        
        stage("update deployment file"){
            steps {
                script {
                         buildNumber = "${BUILD_NUMBER}"
                    sh "sed -i 's/BUILD_TAG/${buildNumber}/g' Kubernetes/deployment.yml"
                    sh "cat Kubernetes/deployment.yml"
                    sh "cp /var/lib/jenkins/workspace/netflix-app/Kubernetes/deployment.yml /var/lib/jenkins/workspace/deployment.yml"
                    sh "cp /var/lib/jenkins/workspace/netflix-app/Kubernetes/service.yml /var/lib/jenkins/workspace/service.yml"
                    sh "cp /var/lib/jenkins/workspace/netflix-app/Kubernetes/node-service.yaml /var/lib/jenkins/workspace/node-service.yaml"
                }
            }
        }
        
        stage('Push changes to ArgoCD repository'){
                 environment {
                 GIT_REPO_NAME = "Argo-CD-deployment"
                 GIT_USER_NAME = "kaushikbl"
                 GITHUB_TOKEN = "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"
                }
            steps {
                script {
                    // Commit and push changes to the destination repository
                    git branch: 'main', credentialsId: 'github-jenkins', url: 'https://github.com/kaushikbl/Argo-CD-deployment.git'
                    sh 'mv /var/lib/jenkins/workspace/deployment.yml /var/lib/jenkins/workspace/netflix-app/Kubernetes/deployment.yml'
                    sh "mv /var/lib/jenkins/workspace/service.yml /var/lib/jenkins/workspace/netflix-app/Kubernetes/service.yml"
                    sh "mv /var/lib/jenkins/workspace/node-service.yaml /var/lib/jenkins/workspace/netflix-app/Kubernetes/node-service.yaml"
                    sh 'git add .'
                    sh 'git commit -m "image tag replaced"'
                    sh 'git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main'    
                }
            }
        }
    }
}